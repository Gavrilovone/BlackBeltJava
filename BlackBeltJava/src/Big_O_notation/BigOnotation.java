
package Big_O_notation;
/**
 * можно встретить такую запись O(1), О(n) - это написание используется для описания сложности алгоритмов, для этого
 * ипользуется понятие времени, тоесть за какое время выполняются те или иные алгоритмы.Корректней описывать сложность
 * алгоритма через количество операций выполняемых для достижения результата
 * O(1) - сложность порядка 1 или алгоритм выполняется за постоянное(константное время) такой алгоритм самый быстрый,
 * самый эффективный.тоесть например в arrayListe в независимости от количества элементов метод get будет находить 
 * любой элемент с одинаковой скоростью за одинаковое количество опреаций(get(2) или get(100) найдет за одинаковое 
 * время) 
 * 
 * О(n) - это сложность порядка n такой алгоритм еще называют линейным, то-есть он линейно маштабируется.например
 * вычисление суммы массива(сумма из 3х элементов вычислится за 2 шага, а сумма из 100 элементов за 99), чем бьольше 
 * элеметов, тем больше операций до достижения результата, количество операций пропорционально возрастает количетву 
 * элементов
 * О(logn) - логарифмическая сложность,  жуже чем O(1) но лучше чем О(n), простейший примр это бинарный поиск
 * это не все возможные случаи но самые распространенные
 */
public class BigOnotation {
    
}
