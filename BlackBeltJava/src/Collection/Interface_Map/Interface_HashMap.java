
package Collection.Interface_Map;

import java.util.HashMap;
import java.util.Map;

/**
 * Элементами HashMap являются пары ключ/значение.HashMap не запоминает порядок добавления элементов.Его методы работают очень быстро,
 * тоесть когда нет необходимости хранить пары ключ/значение в отсортированном виде и rulf нам очень бстро нужно получать элементы из 
 * коллекии HashMap правильный выбор.Ключи элементов должны быть уникальными.Ключ может быть null.Значения элементов могут повторятся,
 * значения могут быть null
 */
public class Interface_HashMap {
    public static void main(String[] args) {
        /**
         * создадим пары номер паспорта это ключ, а имя+фамилия это значение
         */
        Map<Integer, String> map1 = new HashMap<>(); // ключ номер паспорта Integer, а значение будет String
        map1.put(1000, "Алексей Гаврилов"); // добавление элементов происходит с помощью метода put
        map1.put(3546, "Дмитрий Петров");
        map1.put(6878, "Мария Иванова");
        map1.put(1345, null);
        map1.put(null, "Иван Сергеев");
        
        System.out.println(map1); // {null=Иван Сергеев, 1345=null, 1000=Алексей Гаврилов, 3546=Дмитрий Петров, 6878=Мария Иванова}
        
        map1.put(1000, "Олег Иванов");
        /**
         * если добавить еще один элемент с ключом который уже есть, то ключ останется таким же, а значение преезапишется(Значение Алексей Гаврилов)
         * перезаписался на Олег иванов, но ключ остался прежний 1000
         */
        System.out.println(map1); // {null=Иван Сергеев, 1345=null, 1000=Олег Иванов, 3546=Дмитрий Петров, 6878=Мария Иванова}
        
        map1.putIfAbsent(3546, "Баландина Екатерина"); // putIfAbsent добавляет элемент если его нет, в данном случае ключ 3546 уже есть поэтому не добавится
        
        System.out.println(map1.get(1000)); // Олег Иванов
        System.out.println(map1.get(85978)); // null - так как такого ключа нет
        
        map1.remove(3546);// удалим элементпод номером ключа 3546 "Николай Петров"
        System.out.println(map1); // {null=Иван Сергеев, 1345=null, 1000=Олег Иванов, 6878=Мария Иванова}
        
        /**
         * метод containsValue проверяет есть ли в нашем HashMap значение определенное которое мы ищем и если оно есть то возвращает true
         */
        System.out.println(map1.containsValue("Сергеев"));// false
        System.out.println(map1.containsValue("Иван Сергеев")); // true
        
        /**
         * метод containsKey проверяет есть ли в нашем HashMap ключ который мы ищем и если он есть то возвращает true
         */
        System.out.println(map1.containsKey(3546)); // false так как мы удалили его с помощью метода remove
        System.out.println(map1.containsKey(1000)); // true
        
        /**
         * метод keySet возвращает множество всех ключей которые есть в нашем HashMap 
         */
         System.out.println(map1.keySet()); // [null, 1345, 1000, 6878]
         
        /**
         * метод values возвращает множество всех занчений которые есть в нашем HashMap 
         */
        System.out.println(map1.values()); // [Иван Сергеев, null, Олег Иванов, Мария Иванова]
         
        /**
         * Ключи/значения могут быть любых типов и даже созданный нами класс
         */
        Map<String, String> map2 = new HashMap<>();
        map2.put("Саша", "Добрый");
        map2.put("Миша", "Хороший");
        map2.put("Ольга", "Милая");
       
    }
}
